name: Test, Deploy

on:
  push:
    branches: [ master ]

env:
  IMAGE_NAME: helloworld

jobs:

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.13
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Build
      run: go build -v .

    - name: Test
      run: go test -v .

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKE }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME

          # Use Docker `latest` tag convention
          VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag helloworld $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
          sed -i 's/GITHUB_SHA_ID/'"$GITHUB_SHA"'/g' $GITHUB_WORKSPACE/kube/deployment.yml
          cat $GITHUB_WORKSPACE/kube/deployment.yml

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Save DigitalOcean kubeconfig
        run: doctl kubernetes cluster kubeconfig save k8s-helloworld

      - name: Create A Secret
        run: kubectl create secret docker-registry regcred --docker-server=docker.pkg.github.com --docker-username=${{ github.actor }} --docker-password=${{ secrets.GITHUB_TOKEN }} --docker-email=${{ secrets.GHUB_EMAIL }} --dry-run=true -o yaml | kubectl apply -f -

      - name: Deploy to DigitalOcean Kubernetes
        run: kubectl apply -f $GITHUB_WORKSPACE/kube/service.yml && kubectl apply -f $GITHUB_WORKSPACE/kube/deployment.yml 

      - name: Verify deployment
        run: kubectl rollout status deployment/helloworld
